#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// layers

#define QWERTY 0
#define NAV 1
#define SYMBOL 2
#define NUMBER 3
#define SYSCTL  4

// keys

#define HYPER LS(LC(LA(LGUI)))

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&lt 3 TAB      &kp Q  &kp W  &kp E     &kp R  &kp T       &kp Y      &kp U  &kp I              &kp O    &kp P     &mt RIGHT_ALT SINGLE_QUOTE
&mt LCTRL ESC  &kp A  &kp S  &kp D     &kp F  &kp G       &kp H      &kp J  &kp K              &kp L    &kp SEMI  &kp ENTER
&kp LSHFT      &kp Z  &kp X  &kp C     &kp V  &kp B       &kp N      &kp M  &kp COMMA          &kp DOT  &kp FSLH  &mt RSHIFT EQUAL
                             &kp LGUI  &mo 2  &kp BSPC    &kp SPACE  &mo 1  &kp RIGHT_COMMAND
            >;
        };

        nav_layer {
            bindings = <
&kp LEFT_ALT    &kp F1   &kp F2   &kp F3    &kp F4   &kp F5       &kp PAGE_UP    &kp HOME    &kp UP            &kp END     &kp C_SLEEP           &kp C_VOLUME_UP
&none           &kp F6   &kp F7   &kp F8    &kp F9   &kp F10      &kp PAGE_DOWN  &kp LEFT    &kp DOWN          &kp RIGHT   &kp C_AL_SCREENSAVER  &kp C_VOLUME_DOWN
&kp LEFT_SHIFT  &kp F11  &kp F12  &kp F13   &kp F14  &kp F15      &none          &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_AL_LOCK         &kp K_MUTE
                                  &kp LGUI  &trans   &kp SPACE    &none          &trans      &kp RALT
            >;
        };

        symbol_layer {
            bindings = <
&bt BT_SEL 0  &kp EXCL   &kp AT     &kp LBRC  &kp RBRC  &kp UNDER    &kp BSLH   &none      &kp GRAVE  &none    &none     &none
&bt BT_SEL 1  &kp HASH   &kp DLLR   &kp LPAR  &kp RPAR  &kp MINUS    &kp EQUAL  &kp AMPS   &kp SQT    &kp DQT  &kp PIPE  &none
&bt BT_CLR    &kp PRCNT  &kp CARET  &kp LBKT  &kp RBKT  &kp PLUS     &kp ASTRK  &kp TILDE  &kp LT     &kp GT   &kp FSLH  &none
                                    &none     &trans    &none        &none      &trans     &none
            >;
        };

        number_layer {
            bindings = <
&none  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5    &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &none
&none  &none   &none   &none   &none   &none     &none   &kp N4  &kp N5  &kp N6  &none   &none
&none  &none   &none   &none   &none   &none     &kp N0  &kp N1  &kp N2  &kp N3  &none   &none
                       &none   &trans  &none     &kp N0  &trans  &none
            >;
        };

        sysctl_layer {
            bindings = <
&bt BT_SEL 0  &none  &none  &none  &bootloader  &none    &none  &bootloader  &none   &none   &none  &none
&bt BT_SEL 1  &none  &none  &none  &none        &none    &none  &kp N4       &kp N5  &kp N6  &none  &none
&bt BT_CLR    &none  &none  &none  &none        &none    &none  &none        &none   &none   &none  &none
                            &none  &trans       &none    &none  &trans       &none
            >;
        };
    };
};
