#include <behaviors.dtsi>
#include "mouse.dtsi"
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// layers

#define QWERTY 0
#define NAV 1
#define SYMNUM 2
#define FUNCNUM 3
#define SYSCTL  4

// keys

#define XXX &none
#define ___ &trans
#define HYPER LS(LC(LA(LGUI)))
#define LAG LA(LGUI)
#define LSG LS(LGUI)
#define LCG LC(LGUI)

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <4>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty_layer {
            bindings = <
&lt 3 TAB         &kp Q  &kp W  &kp E     &kp R  &kp T       &kp Y      &kp U  &kp I      &kp O    &kp P     &mt RALT SINGLE_QUOTE
&mt LCTRL ESC     &kp A  &kp S  &kp D     &kp F  &kp G       &kp H      &kp J  &kp K      &kp L    &kp SEMI  &kp ENTER
&mt LSHIFT GRAVE  &kp Z  &kp X  &kp C     &kp V  &kp B       &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH  &mt RSHIFT EQUAL
                                &kp LGUI  &mo 2  &kp BSPC    &kp SPACE  &mo 1  &kp RGUI
            >;
        };

        nav_layer {
            bindings = <
&kp LALT    &none   &mwh SCROLL_LEFT      &mmv MOVE_UP         &mwh SCROLL_RIGHT &mwh SCROLL_UP           &kp PAGE_UP    &kp HOME    &kp UP            &kp END     &kp C_SLEEP           &kp C_VOLUME_UP
&kp LCTRL   &none   &mmv MOVE_LEFT        &mmv MOVE_DOWN       &mmv MOVE_RIGHT   &mwh SCROLL_DOWN         &kp PAGE_DOWN  &kp LEFT    &kp DOWN          &kp RIGHT   &kp C_AL_SCREENSAVER  &kp C_VOLUME_DOWN
&kp LSHIFT  &none   &none                 &none                &mkp MB2          &mkp MB1                 &none          &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_AL_LOCK         &kp K_MUTE
                                &trans    &none                &kp HYPER                                  &none          &trans      &trans
            >;
        };

        symnum_layer {
            bindings = <
&mt LEFT_ALT BACKSPACE  &kp EXCL   &kp AT     &kp HASH  &kp DOLLAR        &kp PERCENT       &kp CARET        &kp AMPERSAND      &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOUBLE_QUOTES
&mt LCTRL DELETE        &kp N1     &kp N2     &kp N3    &kp N4            &kp N5            &kp N6           &kp N7             &kp N8        &kp N9                &kp N0                 &kp MINUS
&kp LSHIFT              &kp GRAVE  &kp TILDE  &kp PIPE  &kp LEFT_BRACKET  &kp LEFT_BRACE    &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp LT        &kp GT                &kp BACKSLASH          &kp PLUS
                                              &none     &trans            &none             &kp SPACE        &none              &trans
            >;
        };

        funcnum_layer {
            bindings = <
&none  &kp F1   &kp F2   &kp F3   &kp F4   &kp F5     &none   &kp N7  &kp N8  &kp N9  &kp N0  &none
&none  &kp F6   &kp F7   &kp F8   &kp F9   &kp F10    &none   &kp N4  &kp N5  &kp N6  &none   &none
&none  &kp F11  &kp F12  &kp F13  &kp F14  &kp F15    &kp N0  &kp N1  &kp N2  &kp N3  &none   &none
                         &none    &trans   &none      &kp N0  &trans  &none
            >;
        };

        sysctl_layer {
            bindings = <
&bt BT_SEL 0  &none  &none  &none  &bootloader  &none    &none  &bootloader  &none   &none   &none  &none
&bt BT_SEL 1  &none  &none  &none  &none        &none    &none  &kp N4       &kp N5  &kp N6  &none  &none
&bt BT_CLR    &none  &none  &none  &none        &none    &none  &none        &none   &none   &none  &none
                            &none  &trans       &none    &none  &trans       &none
            >;
        };
    };
};
